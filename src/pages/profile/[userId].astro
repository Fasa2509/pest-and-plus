---
import MainLayout from "@/components/layouts/MainLayout.astro";
import { type IUser } from "@/types/User";
import { decodeToken } from "@/utils/JWT";

import { backGetUserInfo } from "@/database/BackDbUser";
import { OtherProfileInfo } from "@/components/pages/OtherProfileInfo";
import { OtherProfilePets } from "@/components/pages/OtherProfilePets";
import { AsideData } from "@/components/ui/AsideData";
import { OtherProfilePosts } from "@/components/pages/OtherProfilePosts";

let { userId: id } = Astro.params;

let userId = Number(id);

if (isNaN(userId)) return Astro.redirect("/feed");

const token = Astro.cookies.get("auth-token");

let userInfo: Pick<IUser, "id" | "email" | "role" | "name"> | undefined;

if (token) {
    userInfo = await decodeToken(token.value);

    if (userInfo && userInfo.id === userId) return Astro.redirect("/profile");
}

const user = await backGetUserInfo(userId);

if (user && !user.isAble && userInfo && userInfo.role === "USER")
    return Astro.redirect("/");

// const token = Astro.cookies.get("auth-token");

// if (!token) return Astro.redirect("/feed");

// let userInfo = await decodeToken(token.value);

// if (!userInfo) return Astro.redirect("/feed");

// const newToken = signToken(userInfo, true);

// if (newToken)
//     Astro.cookies.set("auth-token", newToken, {
//         path: "/",
//         httpOnly: true,
//         maxAge: cookiesLifeTime,
//     });
---

<MainLayout title="Mi Perfil">
    <section class="container">
        {
            !user ? (
                <span>No se encontr√≥ el usuario</span>
            ) : (
                <>
                    <OtherProfileInfo client:load user={user} />
                    <OtherProfilePets client:load user={user} />
                    <AsideData client:load />
                    <OtherProfilePosts client:load user={user} />
                </>
            )
        }
    </section>
</MainLayout>
<style>
    /* <ProfileRecent client:load /> */
    /* body {
        min-height: 100dvh;
    } */

    .container {
        padding-top: 1rem;
        display: flex;
        flex-direction: column;
        row-gap: 2rem;
    }

    @media screen and (min-width: 990px) {
        .container {
            padding: 1.5rem 1.5rem 0;
            display: grid;
            gap: 1.5rem;
            grid-template-columns: 1fr 1fr 1fr 1fr 1fr 1fr;
            grid-template-rows: 0fr 0fr;
            grid-template-areas:
                "perfil perfil perfil mascotas mascotas mascotas"
                "recientes recientes publicaciones publicaciones publicaciones publicaciones";
        }
    }
</style>
